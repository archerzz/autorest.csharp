// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace CadlCollection
{
    public partial class Pet
    {
        /// <summary> Initializes a new instance of Pet. </summary>
        /// <param name="name"></param>
        /// <param name="age"></param>
        /// <param name="names"></param>
        /// <param name="ages"></param>
        /// <param name="species"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/>, <paramref name="names"/>, <paramref name="ages"/> or <paramref name="species"/> is null. </exception>
        public Pet(string name, int age, IEnumerable<string> names, IEnumerable<int> ages, IEnumerable<Specy> species)
        {
            Argument.AssertNotNull(name, nameof(name));
            Argument.AssertNotNull(names, nameof(names));
            Argument.AssertNotNull(ages, nameof(ages));
            Argument.AssertNotNull(species, nameof(species));

            Name = name;
            Age = age;
            Names = names.ToList();
            Ages = ages.ToList();
            Species = species.ToList();
        }
        /// <summary> Initializes a new instance of Pet. </summary>
        /// <param name="name"></param>
        /// <param name="age"></param>
        /// <param name="names"></param>
        /// <param name="ages"></param>
        /// <param name="species"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/>, <paramref name="names"/>, <paramref name="ages"/> or <paramref name="species"/> is null. </exception>
        internal Pet(string name, int age, IList<string> names, IList<int> ages, IList<Specy> species)
        {
            Argument.AssertNotNull(name, nameof(name));
            Argument.AssertNotNull(names, nameof(names));
            Argument.AssertNotNull(ages, nameof(ages));
            Argument.AssertNotNull(species, nameof(species));

            Name = name;
            Age = age;
            Names = names;
            Ages = ages;
            Species = species;
        }

        public string Name { get; set; }

        public string Tag { get; set; }

        public int Age { get; set; }

        public IList<string> Names { get; }

        public IList<int> Ages { get; }

        public IList<Specy> Species { get; }
    }
}
